{"version":3,"sources":["index.js"],"names":["app","db","mysql","createConnection","host","user","password","database","insecureAuth","use","express","json","get","req","res","post","body","username","q","query","err","data","console","error","status","message","length","name","userType","tableName","extraField","checkUserQuery","insertUserQuery","filename","params","sendFile","path","join","__dirname","prod_name","prod_description","price","type","image","files","imagePath","mv","values","carID","id","carid","customername","title","content","rating","reviewdate","put","listen","log"],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport fileUpload from \"express-fileupload\";\r\nimport mysql from \"mysql\";\r\nimport cors from \"cors\";\r\nimport path from \"path\";\r\nconst app = express();\r\nconst db = mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: 'Nald@0627',\r\n  database: 'marketplace',\r\n  insecureAuth: true,\r\n});\r\napp.use(express.json());\r\napp.use(cors());\r\napp.use(fileUpload());\r\napp.use('/public', express.static('public'));\r\napp.get(\"/\", (req, res)=>{\r\n  res.json(\"this is the backend\")\r\n})\r\napp.post(\"/login/buyer\", (req, res) => {\r\n  const { username, password } = req.body;\r\n\r\n  const q = \"SELECT * FROM buyer WHERE username = ? AND password = ?\";\r\n  db.query(q, [username, password], (err, data) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    if (data.length > 0) {\r\n      return res.status(200).json({ message: \"Buyer login successful\" });\r\n    } else {\r\n      return res.status(401).json({ message: \"Invalid credentials for buyer\" });\r\n    }\r\n  });\r\n});\r\napp.post(\"/login/seller\", (req, res) => {\r\n  const { username, password } = req.body;\r\n\r\n  const q = \"SELECT * FROM seller WHERE username = ? AND password = ?\";\r\n  db.query(q, [username, password], (err, data) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    if (data.length > 0) {\r\n      return res.status(200).json({ message: \"Seller login successful\" });\r\n    } else {\r\n      return res.status(401).json({ message: \"Invalid credentials for seller\" });\r\n    }\r\n  });\r\n});\r\napp.post(\"/signup\", (req, res) => {\r\n  const { username, password, name, userType } = req.body;\r\n\r\n  if (!username || !password || !name) {\r\n    return res.status(400).json({ message: \"Username, password, and name are required\" });\r\n  }\r\n\r\n  let tableName, extraField;\r\n  if (userType === \"buyer\") {\r\n    tableName = \"buyer\";\r\n    extraField = \"name\";\r\n  } else if (userType === \"seller\") {\r\n    tableName = \"seller\";\r\n    extraField = \"name\";\r\n  } else {\r\n    return res.status(400).json({ message: \"Invalid user type\" });\r\n  }\r\n  const checkUserQuery = `SELECT * FROM ${tableName} WHERE username = ?`;\r\n  db.query(checkUserQuery, [username], (err, data) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    if (data.length > 0) {\r\n      return res.status(409).json({ message: \"Username already exists\" });\r\n    } else {\r\n      const insertUserQuery = `INSERT INTO ${tableName} (\\`username\\`, \\`password\\`, \\`${extraField}\\`) VALUES (?, ?, ?)`;\r\n      db.query(insertUserQuery, [username, password, name], (err, data) => {\r\n        if (err) {\r\n          console.error(err);\r\n          return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n        }\r\n        return res.status(201).json({ message: \"User registered successfully\" });\r\n      });\r\n    }\r\n  });\r\n});\r\napp.get(\"/car\", (req, res)=>{\r\n  const q= \"SELECT * FROM car\"\r\n  db.query(q,(err,data)=>{\r\n      if(err) return res.json(err)\r\n      return res.json(data)\r\n  } )\r\n})\r\napp.get(\"/upload/:filename\", (req, res) => {\r\n  const filename = req.params.filename;\r\n  res.sendFile(path.join(__dirname, 'public', 'upload', filename));\r\n});\r\napp.get(\"/review\", (req, res) => {\r\n  const q = \"SELECT * FROM review\";\r\n  \r\n  db.query(q, (err, data) => {\r\n    if (err) return res.json(err);\r\n    return res.json(data);\r\n  });\r\n});\r\napp.post(\"/car\", (req, res) => {\r\n  const { prod_name, prod_description, price, type } = req.body;\r\n  const { image } = req.files;\r\n\r\n  if (!image) {\r\n    return res.status(400).json({ message: \"No image provided\" });\r\n  }\r\n\r\n  const imagePath = `public/upload/${image.name}`;\r\n  image.mv(imagePath, (err) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Error saving image\" });\r\n    }\r\n\r\n    const q = \"INSERT INTO car (`prod_name`, `prod_description`, `price`, `type`, `image`) VALUES (?, ?, ?, ?, ?)\";\r\n    const values = [prod_name, prod_description, price, type, imagePath];\r\n\r\n    db.query(q, values, (err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n      }\r\n      return res.status(201).json({ message: \"Car added successfully\" });\r\n    });\r\n  });\r\n});\r\napp.delete(\"/car/:id\",(req,res)=>{\r\n  const carID= req.params.id;\r\n  const q= \"DELETE FROM car WHERE id= ?\"\r\n\r\n  db.query(q, carID, (err, data) => { \r\n      if (err) {\r\n          console.error(err);\r\n          return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n      }\r\n      return res.status(201).json({ message: \"Car Deleted\" });\r\n  });\r\n\r\n})\r\napp.post(\"/review/car/:carid\", (req, res) => {\r\n  const q = \"INSERT INTO review (`carid`, `customername`, `title`, `content`, `rating`, `reviewdate`) VALUES (?, ?, ?, ?, ?, ?)\";\r\n  const values = [\r\n    req.params.carid,\r\n    req.body.customername,\r\n    req.body.title,\r\n    req.body.content,\r\n    req.body.rating,\r\n    req.body.reviewdate,\r\n  ];\r\n\r\n  db.query(q, values, (err, data) => {\r\n    if (err) {\r\n      console.error(\"Error inserting review:\", err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    return res.status(201).json({ message: \"Review added successfully\" });\r\n  });\r\n});\r\napp.put(\"/review/car/:carid\", (req, res) => {\r\n  const q = \"UPDATE review SET `customername`=?, `title`=?, `content`=?, `rating`=?, `reviewdate`=? WHERE reviewid=?\";\r\n  const values = [\r\n    req.body.customername,\r\n    req.body.title,\r\n    req.body.content,\r\n    req.body.rating,\r\n    req.body.reviewdate,\r\n    req.params.id,\r\n  ];\r\n\r\n  db.query(q, values, (err, data) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    return res.status(201).json({ message: \"Review updated successfully\" });\r\n  });\r\n});\r\napp.put(\"/car/:id\", (req, res) => {\r\n  const carID = req.params.id;\r\n  const { prod_name, prod_description, price, type } = req.body;\r\n  const { image } = req.files;\r\n\r\n  let imagePath;\r\n\r\n  if (image) {\r\n    // If a new image is provided, upload it and update the imagePath\r\n    imagePath = `public/upload/${image.name}`;\r\n    image.mv(imagePath, (err) => {\r\n      if (err) {\r\n        console.error(err);\r\n        return res.status(500).json({ message: \"Error saving image\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  const q = `UPDATE car SET \r\n    prod_name = ?, \r\n    prod_description = ?, \r\n    ${image ? \"image = ?,\" : \"\"} \r\n    price = ?, \r\n    type = ? \r\n    WHERE id = ?`;\r\n\r\n  const values = [prod_name, prod_description, image ? imagePath : null, price, type, carID];\r\n\r\n  db.query(q, values, (err, data) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    return res.status(201).json({ message: \"Car Updated\" });\r\n  });\r\n});\r\napp.get(\"/car/:id\", (req, res) => {\r\n  const q = `SELECT * FROM car WHERE id = ?`;\r\n  const carID = req.params.id;\r\n\r\n  db.query(q, [carID], (err, data) => {\r\n    if (err) {\r\n      console.error('Error executing query:', err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    if (data.length > 0) {\r\n      return res.status(200).json(data[0]);\r\n    } else {\r\n      return res.status(404).json({ message: \"Car not found\" });\r\n    }\r\n  });\r\n});\r\napp.get(\"/review/car/:carid\", (req, res) => {\r\n  const carID = req.params.carid;\r\n  const q = \"SELECT * FROM review WHERE carid = ?\";\r\n\r\n  db.query(q, [carID], (err, data) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ message: \"Internal Server Error\", error: err });\r\n    }\r\n    if (data.length > 0) {\r\n      return res.status(200).json(data);\r\n    } else {\r\n      return res.status(404).json({ message: \"No reviews found for this car\" });\r\n    }\r\n  });\r\n});\r\napp.listen(8800, () => {\r\n  console.log(\"connected to backend\");\r\n});\r\n"],"file":"index.dev.js"}